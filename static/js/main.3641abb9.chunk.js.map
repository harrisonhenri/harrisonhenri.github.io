{"version":3,"sources":["img/eu.png","components/Header/Header.module.css","App/intl.ptBR.js","components/Header/intl.ptBR.js","constants/skills.js","constants/stack.js","components/Stack/intl.ptBR.js","constants/ltda.js","components/Jobs/intl.ptBR.js","components/Icon/intl.ptBR.js","App/intl.enUS.js","components/Header/intl.enUS.js","components/Stack/intl.enUS.js","components/Jobs/intl.enUS.js","components/Icon/intl.enUS.js","config/messages.js","config/serviceWorker.js","constants/me.js","constants/links.js","components/Header/Header.jsx","components/Stack/Stack.jsx","components/Jobs/Jobs.jsx","components/Icon/Svg.jsx","components/Icon/IconVnator.jsx","components/Icon/IconDevTo.jsx","components/Icon/IconLinkedin.jsx","components/Icon/IconGithub.jsx","components/Icon/IconEmail.jsx","components/Icon/IconHaskell.jsx","App/App.jsx","index.js","config/flattenMessages.js","App/App.module.css","components/Stack/Stack.module.css","components/Jobs/Jobs.module.css"],"names":["module","exports","app_ptBR","title","paragraph","header_ptBR","name","info","email","location","formation","certification","employ","bio","SKILLS","Object","freeze","OTHER_SKILLS","FRONTEND","BACKEND","STACK","RN","MICROSERVICES","ARCHITECTURE","KOTLIN","AWS","GCP","FIREBASE","NGINX","DOCKER","KUBERNETES","GIT","GIT_FLOW","CI_CD","CIRCLE_CI","VIM","JWT","SERVERLESS","NODE_JS","PYTHON","ELIXIR","FLASK","POSTGRES","MONGO_DB","RABBIT_MQ","REDIS","GRAPHQL","APOLLO_SERVER","REST_API","MVC","ORM","OOP","FUNCTIONAL_PROGRAMING","ES2015","HTML","CSS","CSS_MODULES","TYPE_SCRIPT","ESLINT","REACT","ANGULAR","ANGULARJS","REDUX","WEBPACK","JEST","REACT_TESTING_LIBRARY","NPM","YARN","APOLLO","MATERIAL_DESIGN","stack_ptBR","return","closeArray","closeObj","LTDA","COMPASS_UOL","BLUMED","PEDEPRONTO","ONYO","FALCAO","LLAB","UFBA","jobs_ptBR","company","date","description","icon_ptBR","vnator","linkedin","github","medium","instagram","rust","haskell","elm","wasm","react","app_enUS","header_enUS","stack_enUS","jobs_enUS","icon_enUS","messages","app","header","stack","jobs","icon","en","pt","Boolean","window","hostname","match","ME","SELF","EMAIL","GIT_HUB","INSTAGRAM","MEDIUM","LINKEDIN","LINKS","DEV_TO","Header","formatMessage","useIntl","id","className","style","half","profile","src","img","alt","list","item","strong","str","key","link","href","target","rel","_bio","subtitle","text","Stack","skills","values","map","skill","function","tech","Jobs","Svg","children","viewBox","size","minX","minY","width","height","Types","shape","number","defaultProps","IconDevTo","props","d","undefined","IconLinkedin","IconGithub","IconEmail","List","position","locale","navigator","language","userLanguage","languages","ReactDOM","render","flattenMessages","nestedMessages","prefix","keys","reduce","value","prefixedKey","assign","App","_top","_bottom","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3641abb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eu.3bf01fb3.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"profile\":\"Header_profile__1y4dl\",\"half\":\"Header_half__6ivu4\",\"_bio\":\"Header__bio__257NW\",\"info\":\"Header_info__yQXON\",\"title\":\"Header_title__3SH2Q\",\"list\":\"Header_list__3enJP\",\"item\":\"Header_item__3IlmB\",\"subtitle\":\"Header_subtitle__VxvKU\",\"link\":\"Header_link__2wI74\"};","const app_ptBR = {\n  title: 'VNATOR STARTER KIT',\n  paragraph:\n    'Edite <code>src/App/App.js</code> e salve para recarregar. <extern>Aprenda React</extern>',\n};\n\nexport { app_ptBR };\n","const header_ptBR = {\n  name: 'Harrison Henri dos Santos Nascimento',\n  info: {\n    email: 'harrisonhenrisn@gmail.com',\n    location: 'Salvador - BA',\n    formation:\n      '<strong>Formação:</strong> Engenharia Eletrônica - UFBA (Salvador - BA) - 2014/2020',\n    certification: '<strong>Certificados:</strong> AWS Solutions Architect',\n    employ:\n      '<strong>Ocupação:</strong> Engenheiro de software sênior na <company>Compass UOL</company>',\n  },\n  bio: {\n    title: 'Bio',\n    paragraph:\n      'Sou engenheiro sênior com experiência na área de Ciência de Dados e Desenvolvimento de Software através de metodologias ágeis, trabalhando principalmente com as tecnologias: React, React Native, RabbitMQ, Kafka, Python, Java, Spring Boot, Spring Data, Javascript, Typescript, Nodejs, Oracle Database, PostgreSQL e MongoDB. Tenho experiência em trabalhar com arquiteturas multi-stack e baseadas em microsserviços. Também trabalhei como consultor na área de modelagem matemática usando redes neurais artificiais e lógica fuzzy como motores  de inferência.',\n  },\n};\n\nexport { header_ptBR };\n","const SKILLS = Object.freeze({\n  OTHER_SKILLS: 'OTHER_SKILLS',\n  FRONTEND: 'FRONTEND',\n  BACKEND: 'BACKEND',\n});\n\nexport { SKILLS };\n","import { SKILLS } from './skills';\n\nconst STACK = Object.freeze({\n  [SKILLS.OTHER_SKILLS]: Object.freeze({\n    RN: 'RN',\n    MICROSERVICES: 'MICROSERVICES',\n    ARCHITECTURE: 'ARCHITECTURE',\n    KOTLIN: 'KOTLIN',\n    AWS: 'AWS',\n    GCP: 'GCP',\n    FIREBASE: 'Firebase',\n    NGINX: 'NGINX',\n    DOCKER: 'DOCKER',\n    KUBERNETES: 'KUBERNETES',\n    GIT: 'GIT',\n    GIT_FLOW: 'GIT_FLOW',\n    CI_CD: 'CI_CD',\n    CIRCLE_CI: 'CIRCLE_CI',\n    VIM: 'VIM',\n    JWT: 'JWT',\n  }),\n  [SKILLS.BACKEND]: Object.freeze({\n    SERVERLESS: 'SERVERLESS',\n    NODE_JS: 'NODE_JS',\n    PYTHON: 'PYTHON',\n    ELIXIR: 'ELIXIR',\n    FLASK: 'FLASK',\n    POSTGRES: 'POSTGRES',\n    MONGO_DB: 'MONGO_DB',\n    RABBIT_MQ: 'RABBIT_MQ',\n    REDIS: 'REDIS',\n    GRAPHQL: 'GRAPHQL',\n    APOLLO_SERVER: 'APOLLO_SERVER',\n    REST_API: 'REST_API',\n    MVC: 'MVC',\n    ORM: 'ORM',\n    OOP: 'OOP',\n    FUNCTIONAL_PROGRAMING: 'FUNCTIONAL_PROGRAMING',\n  }),\n  [SKILLS.FRONTEND]: Object.freeze({\n    ES2015: 'ES2015',\n    HTML: 'HTML',\n    CSS: 'CSS',\n    CSS_MODULES: 'CSS_MODULES',\n    TYPE_SCRIPT: 'TYPE_SCRIPT',\n    ESLINT: 'ESLINT',\n    REACT: 'REACT',\n    ANGULAR: 'ANGULAR',\n    ANGULARJS: 'ANGULARJS',\n    REDUX: 'REDUX',\n    WEBPACK: 'WEBPACK',\n    JEST: 'JEST',\n    REACT_TESTING_LIBRARY: 'REACT_TESTING_LIBRARY',\n    NPM: 'NPM',\n    YARN: 'YARN',\n    APOLLO: 'APOLLO',\n    MATERIAL_DESIGN: 'MATERIAL_DESIGN',\n  }),\n});\n\nexport { STACK };\n","import { SKILLS } from '../../constants/skills';\nimport { STACK } from '../../constants/stack';\n\nconst { OTHER_SKILLS, FRONTEND, BACKEND } = SKILLS;\n\nconst stack_ptBR = {\n  title: 'Stack',\n  return: 'return [',\n  closeArray: ']',\n  closeObj: '}',\n  [OTHER_SKILLS]: {\n    title: 'conhecimentos( desenvolvedor ) {',\n    [STACK[OTHER_SKILLS].ARCHITECTURE]: 'Arquitetura',\n    [STACK[OTHER_SKILLS].MICROSERVICES]: 'Microsserviços',\n    [STACK[OTHER_SKILLS].RN]: 'React native',\n    [STACK[OTHER_SKILLS].KOTLIN]: 'Kotlin',\n    [STACK[OTHER_SKILLS].AWS]: 'AWS Amazon Web Services',\n    [STACK[OTHER_SKILLS].GCP]: 'GCP - Google Cloud Platform',\n    [STACK[OTHER_SKILLS].FIREBASE]: 'Firebase',\n    [STACK[OTHER_SKILLS].DOCKER]: 'Docker',\n    [STACK[OTHER_SKILLS].KUBERNETES]: 'Kubernetes',\n    [STACK[OTHER_SKILLS].NGINX]: 'NGINX Server',\n    [STACK[OTHER_SKILLS].GIT]: 'git',\n    [STACK[OTHER_SKILLS].GIT_FLOW]: 'Git Flow',\n    [STACK[OTHER_SKILLS].CI_CD]: 'CI/CD',\n    [STACK[OTHER_SKILLS].CIRCLE_CI]: 'Circle CI',\n    [STACK[OTHER_SKILLS].VIM]: 'Vim',\n    [STACK[OTHER_SKILLS].JWT]: 'JWT',\n  },\n  [BACKEND]: {\n    title: 'conhecimentos( backend ) {',\n    [STACK[BACKEND].SERVERLESS]: 'Serverless',\n    [STACK[BACKEND].NODE_JS]: 'NodeJS',\n    [STACK[BACKEND].PYTHON]: 'Python',\n    [STACK[BACKEND].ELIXIR]: 'Elixir',\n    [STACK[BACKEND].FLASK]: 'Flask',\n    [STACK[BACKEND].POSTGRES]: 'PostgreSQL',\n    [STACK[BACKEND].MONGO_DB]: 'MongoDB',\n    [STACK[BACKEND].RABBIT_MQ]: 'Rabbitmq',\n    [STACK[BACKEND].REDIS]: 'Redis',\n    [STACK[BACKEND].GRAPHQL]: 'GraphQL',\n    [STACK[BACKEND].REST_API]: 'Rest Apis',\n    [STACK[BACKEND].OOP]: 'Programação Orientada a Objetos',\n    [STACK[BACKEND].MVC]: 'MVC (Model View Controller)',\n    [STACK[BACKEND].ORM]: 'ORM (Object Relational Mapper)',\n    [STACK[BACKEND].FUNCTIONAL_PROGRAMING]: 'Programação funcional',\n    [STACK[BACKEND].APOLLO_SERVER]: 'Apollo Server',\n  },\n  [FRONTEND]: {\n    title: 'conhecimentos( frontend ) {',\n    [STACK[FRONTEND].ES2015]: 'ES2015++',\n    [STACK[FRONTEND].HTML]: 'html5',\n    [STACK[FRONTEND].CSS]: 'css3',\n    [STACK[FRONTEND].CSS_MODULES]: 'CSS Modules',\n    [STACK[FRONTEND].TYPE_SCRIPT]: 'Typescript',\n    [STACK[FRONTEND].ESLINT]: 'ESLint',\n    [STACK[FRONTEND].REACT]: 'ReactJs',\n    [STACK[FRONTEND].ANGULAR]: 'Angular',\n    [STACK[FRONTEND].ANGULARJS]: 'AngularJS',\n    [STACK[FRONTEND].REDUX]: 'Redux',\n    [STACK[FRONTEND].WEBPACK]: 'Webpack',\n    [STACK[FRONTEND].JEST]: 'Jest',\n    [STACK[FRONTEND].REACT_TESTING_LIBRARY]: 'React testing library',\n    [STACK[FRONTEND].NPM]: 'npm',\n    [STACK[FRONTEND].YARN]: 'Yarn',\n    [STACK[FRONTEND].APOLLO]: 'Apollo Client',\n    [STACK[FRONTEND].MATERIAL_DESIGN]: 'Material Design',\n  },\n};\n\nexport { stack_ptBR };\n","const LTDA = Object.freeze({\n  COMPASS_UOL: 'COMPASS UOL',\n  BLUMED: 'BLUMED',\n  PEDEPRONTO: 'PEDEPRONTO',\n  ONYO: 'ONYO',\n  FALCAO: 'FALCAO',\n  LLAB: 'LLAB',\n  UFBA: 'UFBA',\n});\n\nexport { LTDA };\n","import { LTDA } from '../../constants/ltda';\n\nconst jobs_ptBR = {\n  title: 'Experiência de trabalho',\n  [LTDA.COMPASS_UOL]: {\n    company: 'Compass UOL',\n    employ: 'Engenheiro Sênior',\n    date: 'início em agosto de 2022 até hoje',\n    description:\n      'Engenheiro de software sênior atuando no time de encarteiramento da PagBank/PagSeguro usando as seguintes tecnologias: React, Next, Node, New Relic, Typescript, React testing library, Jenkins, Spring Boot, Spring Boot Data, Kafka, Oracle Database, Airflow e SQS. A equipe é responsável pelo encarteiramento diário de centenas de clientes, em uma base de cerca de 30 milhões de carteiras. Nessa posição também tenho a oportunidade de entrevistar diversos candidatos para as diferentes posições da empresa.',\n  },\n  [LTDA.BLUMED]: {\n    company: 'BluMed',\n    employ: 'Engenheiro e sócio',\n    date: 'início em abril of 2022 até hoje',\n    description:\n      'Sócio e engenheiro responsável gerenciar todas as soluções digitais assim como toda a infrastrutura da platforma usando React, React Native, NodeJs, Typescript, Vercel e MongoDb.',\n  },\n  [LTDA.PEDEPRONTO]: {\n    company: 'PEDEPRONTO',\n    employ: 'Engenheiro Fullstack pleno',\n    date: 'início em outubro à agosto de 2020',\n    description:\n      'Engenheiro full-stack pleno atuando no time de onboarding do Pede Pronto (unidade de negócios da Alelo S.A) usando as seguintes tecnologias: React, React testing library, Apollo, Graphql, Flask, Material UI, assim como toda infrastrutura do GCP e Firebase. Atualmente a empresa está migrando sua arquitetura para uma arquitetura baseada em microsserviços (usando o kong como API Gateway).',\n  },\n  [LTDA.ONYO]: {\n    company: 'ONYO',\n    employ: 'Desenvolvedor Front-end',\n    date: 'entre Julho de 2020 à Setembro de 2020',\n    description:\n      'Desenvolvedor front-end utilizando React e Typescript para criação de um web-app administrativo para os estabelecimentos comerciais da plataforma.',\n  },\n  [LTDA.FALCAO]: {\n    company: 'Falcão Rios Advocacia & Advogados Associados',\n    employ: 'Estagiário',\n    date: 'entre maio e junho de 2020',\n    description:\n      'Estagiário de desenvolvimento utilizando PHP, NodeJs e Python com foco em automação web.',\n  },\n  [LTDA.LLAB]: {\n    company: 'LLAB Soluções em Tratamento de Dados LTDA',\n    employ: 'Estagiário',\n    date: 'entre fevereiro de 2019 até março de 2020',\n    description:\n      'Estágio na área de desenvolvimento front-end e back-end utilizando HTML5, CSS3 e bibliotecas Javascript, além de bibliotecas do R Shiny e MongoDB para criação de Web Apps e ERPs com foco na aplicação de machine learning.',\n  },\n  [LTDA.UFBA]: {\n    company: 'UNIVERSIDADE FEDERAL DA BAHIA',\n    employ: 'Consultor e estagiário pesquisador',\n    date: 'entre 2014 e 2020',\n    description:\n      'Consultor em machine learning e bolsista na área de estatística e controle de processos. Como consultor, auxiliou alunos do Programa de Pós-Graduação em Engenharia Industrial (PEI) utilizando técnicas como redes neurais e lógica fuzzy. Como resultados dos projetos de pesquisa em que participou, foram publicados dois artigos sobre os temas: avaliação de incerteza e particle swarm optimization, além do desenvolvimento de um módulo de controle preditivo em Matlab.',\n  },\n};\n\nexport { jobs_ptBR };\n","const icon_ptBR = {\n  vnator: 'VNATOR',\n  email: 'E-mail',\n  linkedin: 'Linkedin',\n  github: 'Github',\n  medium: 'Medium',\n  instagram: 'Medium',\n  rust: 'Rust',\n  haskell: 'Haskell',\n  elm: 'Elm',\n  wasm: 'Web Assembly (WASM)',\n  react: 'ReactJs',\n};\n\nexport { icon_ptBR };\n","const app_enUS = {\n  title: 'VNATOR STARTER KIT',\n  paragraph:\n    'Edit <code>src/App/App.js</code> and save to reload. <extern>Learn React</extern>',\n};\n\nexport { app_enUS };\n","const header_enUS = {\n  name: 'Harrison Henri dos Santos Nascimento',\n  info: {\n    email: 'harrisonhenrisn@gmail.com',\n    location: 'Salvador - BA',\n    formation:\n      '<strong>Formation:</strong> Eletronic Enginner - UFBA (Salvador - BA) - 2014/2020',\n    certification: '<strong>Certifications:</strong> AWS Solutions Architect',\n    employ:\n      '<strong>Current role:</strong>Senior engineer at <company>Compass UOL</company>',\n  },\n  bio: {\n    title: 'Bio',\n    paragraph:\n      'I am senior engineer with experience in Data Science and Software Development through agile methodologies, working mainly with the technologies: React, React Native, RabbitMQ, Kafka, Python, Java, Spring Boot, Spring Data, Javascript, Typescript, Nodejs, Oracle Database, PostgreSQL and MongoDB. I have experience working with multi-stack and microservice-based architectures. I have also worked as a consultant in the field of mathematical modelling using artificial neural networks and fuzzy logic as inference engines.',\n  },\n};\n\nexport { header_enUS };\n","import { SKILLS } from '../../constants/skills';\nimport { STACK } from '../../constants/stack';\n\nconst { OTHER_SKILLS, FRONTEND, BACKEND } = SKILLS;\n\nconst stack_enUS = {\n  title: 'Stack',\n  return: 'return [',\n  closeArray: ']',\n  closeObj: '}',\n  [OTHER_SKILLS]: {\n    title: 'knowledges( developer ) {',\n    [STACK[OTHER_SKILLS].ARCHITECTURE]: 'Architecture',\n    [STACK[OTHER_SKILLS].MICROSERVICES]: 'Microservices',\n    [STACK[OTHER_SKILLS].RN]: 'React native',\n    [STACK[OTHER_SKILLS].KOTLIN]: 'Kotlin',\n    [STACK[OTHER_SKILLS].AWS]: 'AWS Amazon Web Services',\n    [STACK[OTHER_SKILLS].GCP]: 'GCP - Google Cloud Platform',\n    [STACK[OTHER_SKILLS].FIREBASE]: 'Firebase',\n    [STACK[OTHER_SKILLS].DOCKER]: 'Docker',\n    [STACK[OTHER_SKILLS].KUBERNETES]: 'Kubernetes',\n    [STACK[OTHER_SKILLS].NGINX]: 'NGINX Server',\n    [STACK[OTHER_SKILLS].GIT]: 'git',\n    [STACK[OTHER_SKILLS].GIT_FLOW]: 'Git Flow',\n    [STACK[OTHER_SKILLS].CI_CD]: 'CI/CD',\n    [STACK[OTHER_SKILLS].CIRCLE_CI]: 'Circle CI',\n    [STACK[OTHER_SKILLS].VIM]: 'Vim',\n    [STACK[OTHER_SKILLS].JWT]: 'JWT',\n  },\n  [BACKEND]: {\n    title: 'knowledges( backend ) {',\n    [STACK[BACKEND].SERVERLESS]: 'Serverless',\n    [STACK[BACKEND].NODE_JS]: 'NodeJS',\n    [STACK[BACKEND].PYTHON]: 'Python',\n    [STACK[BACKEND].ELIXIR]: 'Elixir',\n    [STACK[BACKEND].FLASK]: 'Flask',\n    [STACK[BACKEND].POSTGRES]: 'PostgreSQL',\n    [STACK[BACKEND].MONGO_DB]: 'MongoDB',\n    [STACK[BACKEND].RABBIT_MQ]: 'Rabbitmq',\n    [STACK[BACKEND].REDIS]: 'Redis',\n    [STACK[BACKEND].GRAPHQL]: 'GraphQL',\n    [STACK[BACKEND].REST_API]: 'Rest Apis',\n    [STACK[BACKEND].OOP]: 'OOP',\n    [STACK[BACKEND].MVC]: 'MVC (Model View Controller)',\n    [STACK[BACKEND].ORM]: 'ORM (Object Relational Mapper)',\n    [STACK[BACKEND].FUNCTIONAL_PROGRAMING]: 'Functional programming',\n    [STACK[BACKEND].APOLLO_SERVER]: 'Apollo Server',\n  },\n  [FRONTEND]: {\n    title: 'knowledges( frontend ) {',\n    [STACK[FRONTEND].ES2015]: 'ES2015++',\n    [STACK[FRONTEND].HTML]: 'html5',\n    [STACK[FRONTEND].CSS]: 'css3',\n    [STACK[FRONTEND].CSS_MODULES]: 'CSS Modules',\n    [STACK[FRONTEND].TYPE_SCRIPT]: 'Typescript',\n    [STACK[FRONTEND].ESLINT]: 'ESLint',\n    [STACK[FRONTEND].REACT]: 'ReactJs',\n    [STACK[FRONTEND].ANGULAR]: 'Angular',\n    [STACK[FRONTEND].ANGULARJS]: 'AngularJS',\n    [STACK[FRONTEND].REDUX]: 'Redux',\n    [STACK[FRONTEND].WEBPACK]: 'Webpack',\n    [STACK[FRONTEND].JEST]: 'Jest',\n    [STACK[FRONTEND].REACT_TESTING_LIBRARY]: 'React testing library',\n    [STACK[FRONTEND].NPM]: 'npm',\n    [STACK[FRONTEND].YARN]: 'Yarn',\n    [STACK[FRONTEND].APOLLO]: 'Apollo Client',\n    [STACK[FRONTEND].MATERIAL_DESIGN]: 'Material Design',\n  },\n};\n\nexport { stack_enUS };\n","import { LTDA } from '../../constants/ltda';\n\nconst jobs_enUS = {\n  title: 'Work experience',\n  [LTDA.COMPASS_UOL]: {\n    company: 'Compass UOL',\n    employ: 'Senior engineer',\n    date: 'started in august of 2022 until now',\n    description:\n      \"Senior engineer working in the PagBank's portfolio team using the following technologies: React, Next, Node, New Relic, Typescript, React testing library, Jenkins, Spring Boot, Spring Boot Data, Kafka, Oracle Database, Airflow and SQS. The team is responsible for the daily categorization of hundreds of customers, on a basis of around 30 million portfolios. As a senior engineer I also have the opportunity to conduct interview for many positions and seniorities.\",\n  },\n  [LTDA.BLUMED]: {\n    company: 'BluMed',\n    employ: 'Partner and engineer',\n    date: 'started in april of 2022 until now',\n    description:\n      'Partner and engineer responsable for managing all the solutions as well as the all infrastructure of the platform using React, React Native, NodeJs, Typescript, Vercel and MongoDb.',\n  },\n  [LTDA.PEDEPRONTO]: {\n    company: 'PEDEPRONTO',\n    employ: 'Full Stack engineer',\n    date: 'started in october of 2020 until august of 2022',\n    description:\n      \"Full Stack Engineer working in the Pede Pronto's onboarding team (business unit of Alelo S.A) using the following technologies: React, React testing library, Apollo, Graphql, Flask, Material UI as well as Google Cloud Platform and Firebase technologies. Nowadays the company is migrating its architecture for a microservice and multi-stack based architecture (using the kong as API Gateway).\",\n  },\n  [LTDA.ONYO]: {\n    company: 'ONYO',\n    employ: 'Front-end engineer',\n    date: 'between july and september of 2020',\n    description:\n      \"Front-end developer using React and Typescript to create an administrative web-app for the platform's commercial establishments.\",\n  },\n  [LTDA.FALCAO]: {\n    company: 'Falcão Rios Advocacy & Associate Lawyers',\n    employ: 'Intern',\n    date: 'between may and jully of 2020',\n    description:\n      'Development intern using PHP, NodeJs and Python with a focus on web automation.',\n  },\n  [LTDA.LLAB]: {\n    company: 'LLAB Data Processing Solutions LTDA',\n    employ: 'Intern',\n    date: 'between february of 2019 and march of 2020',\n    description:\n      'Front-end and back-end intern using HTML5, CSS3 and Javascript libraries, as well as R Shiny and MongoDB libraries for creating Web Apps and ERPs with a focus on the application of machine learning.',\n  },\n  [LTDA.UFBA]: {\n    company: 'FEDERAL UNIVERSITY OF BAHIA',\n    employ: 'Consultant and intern researcher',\n    date: 'between 2014 and 2020',\n    description:\n      'Machine learning consultant and researcher in the area of control and automation. As a consultant, helped students of the Graduate Program in Industrial Engineering (PEI) using techniques such as neural networks and fuzzy logic. In this period, published two articles appoaching uncertainty avaliation and particle swarm optimization and also helped in the development of a predictive control module in Matlab.',\n  },\n};\n\nexport { jobs_enUS };\n","const icon_enUS = {\n  vnator: 'VNATOR',\n  email: 'E-mail',\n  linkedin: 'Linkedin',\n  github: 'Github',\n  medium: 'Medium',\n  instagram: 'Medium',\n  rust: 'Rust',\n  haskell: 'Haskell',\n  elm: 'Elm',\n  wasm: 'Web Assembly (WASM)',\n  react: 'ReactJs',\n};\n\nexport { icon_enUS };\n","import { app_ptBR } from '../App/intl.ptBR';\nimport { header_ptBR } from '../components/Header/intl.ptBR';\nimport { stack_ptBR } from '../components/Stack/intl.ptBR';\nimport { jobs_ptBR } from '../components/Jobs/intl.ptBR';\nimport { icon_ptBR } from '../components/Icon/intl.ptBR';\n\n// en-US\nimport { app_enUS } from '../App/intl.enUS.js';\nimport { header_enUS } from '../components/Header/intl.enUS';\nimport { stack_enUS } from '../components/Stack/intl.enUS';\nimport { jobs_enUS } from '../components/Jobs/intl.enUS';\nimport { icon_enUS } from '../components/Icon/intl.enUS';\n\nconst messages = Object.freeze({\n  'en-US': {\n    app: app_enUS,\n    header: header_enUS,\n    stack: stack_enUS,\n    jobs: jobs_enUS,\n    icon: icon_enUS,\n  },\n  en: {\n    app: app_enUS,\n    header: header_enUS,\n    stack: stack_enUS,\n    jobs: jobs_enUS,\n    icon: icon_enUS,\n  },\n  'pt-BR': {\n    app: app_ptBR,\n    header: header_ptBR,\n    stack: stack_ptBR,\n    jobs: jobs_ptBR,\n    icon: icon_ptBR,\n  },\n  pt: {\n    app: app_ptBR,\n    header: header_ptBR,\n    stack: stack_ptBR,\n    jobs: jobs_ptBR,\n    icon: icon_ptBR,\n  },\n});\n\nexport { messages };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ME = Object.freeze({\n  SELF: 'ME',\n  EMAIL: 'EMAIL',\n  GIT_HUB: 'GIT_HUB',\n  INSTAGRAM: 'INSTAGRAM',\n  MEDIUM: 'MEDIUM',\n  LINKEDIN: 'LINKEDIN',\n});\n\nexport { ME };\n","import { ME } from './me';\nimport { LTDA } from './ltda';\n\nconst LINKS = Object.freeze({\n  [LTDA.SELF]: Object.freeze({\n    [LTDA.COMPASS_UOL]: 'https://compass.uol',\n  }),\n  [ME.SELF]: Object.freeze({\n    [ME.EMAIL]: 'mailto:harrisohenrisn@gmail.com',\n    [ME.GIT_HUB]: 'https://github.com/harrisonhenri',\n    [ME.DEV_TO]: 'https://dev.to/harrisonhenri',\n    [ME.LINKEDIN]:\n      'https://www.linkedin.com/in/harrison-henri-dos-santos-nascimento/',\n  }),\n});\n\nexport { LINKS };\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport img from '../../img/eu.png';\n\nimport style from './Header.module.css';\nimport { LINKS } from '../../constants/links';\nimport { LTDA } from '../../constants/ltda';\n\nconst Header = () => {\n  const { formatMessage } = useIntl();\n\n  const name = formatMessage({\n    id: 'header.name',\n  });\n\n  return (\n    <div className={style.Header}>\n      <div className={style.half}>\n        <div className={style.profile}>\n          <img src={img} alt={name}></img>\n        </div>\n        <div className={style.info}>\n          <h1 className={style.title}>{name}</h1>\n          <ul className={style.list}>\n            <li className={style.item}>\n              {formatMessage({\n                id: 'header.info.email',\n              })}\n            </li>\n            <li className={style.item}>\n              {formatMessage({\n                id: 'header.info.location',\n              })}\n            </li>\n            <li className={style.item}>\n              {formatMessage(\n                {\n                  id: 'header.info.formation',\n                },\n                {\n                  strong: str => <strong key={str}>{str}</strong>,\n                },\n              )}\n            </li>\n            <li className={style.item}>\n              {formatMessage(\n                {\n                  id: 'header.info.certification',\n                },\n                {\n                  strong: str => <strong key={str}>{str}</strong>,\n                },\n              )}\n            </li>\n\n            <li className={style.item}>\n              {formatMessage(\n                {\n                  id: 'header.info.employ',\n                },\n                {\n                  strong: str => <strong key={str}>{str}</strong>,\n                  company: str => (\n                    <a\n                      className={style.link}\n                      href={LINKS[LTDA.SELF][LTDA.COMPASS_UOL]}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\">\n                      {str}\n                    </a>\n                  ),\n                },\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className={`${style.half} ${style._bio}`}>\n        <h2 className={style.subtitle}>\n          {formatMessage({\n            id: 'header.bio.title',\n          })}\n        </h2>\n        <p className={style.text}>\n          {formatMessage({\n            id: 'header.bio.paragraph',\n          })}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport { Header };\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport style from './Stack.module.css';\nimport { SKILLS } from '../../constants/skills';\nimport { STACK } from '../../constants/stack';\n\nconst Stack = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <div className={style.Stack}>\n      <h2 className={style.title}>\n        {formatMessage({\n          id: 'stack.title',\n        })}\n      </h2>\n      <div className={style.skills}>\n        {Object.values(SKILLS).map(skill => (\n          <div key={skill} className={style.skill}>\n            <h3 className={style.function}>\n              {formatMessage({\n                id: `stack.${skill}.title`,\n              })}\n            </h3>\n            <span className={style.return}>\n              {formatMessage({\n                id: `stack.return`,\n              })}\n            </span>\n            <ul className={style.list}>\n              {Object.values(STACK[skill]).map(tech => (\n                <li key={tech} className={style.tech}>\n                  <a>\n                    {formatMessage({\n                      id: `stack.${skill}.${tech}`,\n                    })}\n                  </a>\n                </li>\n              ))}\n            </ul>\n            <span className={style.return}>\n              {formatMessage({\n                id: `stack.closeArray`,\n              })}\n            </span>\n            <span className={style.function}>\n              {formatMessage({\n                id: `stack.closeObj`,\n              })}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport { Stack };\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport style from './Jobs.module.css';\nimport { LTDA } from '../../constants/ltda';\n\nconst Jobs = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <div className={style.Jobs}>\n      <h2 className={style.title}>\n        {formatMessage({\n          id: 'jobs.title',\n        })}\n      </h2>\n      <div className={style.list}>\n        {Object.values(LTDA).map(company => (\n          <div key={company} className={style.item}>\n            <h3 className={style.company}>\n              {formatMessage({\n                id: `jobs.${company}.company`,\n              })}\n            </h3>\n            <p className={style.employ}>\n              {formatMessage({\n                id: `jobs.${company}.employ`,\n              })}\n              ,{' '}\n              <span className={style.date}>\n                {formatMessage({\n                  id: `jobs.${company}.date`,\n                })}\n              </span>\n            </p>\n            <p className={style.description}>\n              {formatMessage({\n                id: `jobs.${company}.description`,\n              })}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport { Jobs };\n","import React from 'react';\nimport Types from 'prop-types';\n\nconst Svg = ({ children, className, viewBox, size }) => {\n  const { minX, minY, width, height } = viewBox;\n\n  return (\n    <svg\n      viewBox={`${minX} ${minY} ${width} ${height}`}\n      width={size.width}\n      height={size.height}\n      className={className}>\n      {children}\n    </svg>\n  );\n};\n\nconst sizeType = Types.shape({\n  width: Types.number,\n  height: Types.number,\n});\n\nconst viewBoxType = Types.shape({\n  minX: Types.number,\n  minY: Types.number,\n  width: Types.number,\n  height: Types.number,\n});\n\nSvg.propTypes = {\n  children: Types.oneOfType([Types.element, Types.array]).isRequired,\n  className: Types.string,\n  viewBox: viewBoxType,\n  size: sizeType,\n};\n\nSvg.defaultProps = {\n  viewBox: { minX: 0, minY: 0, width: 32, height: 32 },\n  className: '',\n  size: { height: 32, width: 32 },\n};\n\nexport { Svg, viewBoxType };\n","import React from 'react';\nimport Type from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Svg, viewBoxType } from './Svg';\n\nconst IconVnator = props => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Svg {...props}>\n      <title>{formatMessage({ id: 'icon.vnator' })}</title>\n      <path d=\"M20.289 15.529c0.011-1.435 0.004-15.064 0.004-15.064-0-0.466-0-0.466 0.518-0.465l5.338 0c0.518-0.002 0.518-0.002 0.519 0.46 0 0-0.001 13.633-0.001 15.064-0.004 0.61-0.004 0.61-0.357 1.271l-2.322 4.223c-0.204 0.341-0.204 0.341-0.416 0.35h-0.199c-0.209-0.009-0.209-0.009-0.416-0.349l-2.307-4.225c-0.358-0.66-0.363-0.659-0.362-1.267z\"></path>\n      <path d=\"M13.659 26.159c0.011-1.435 0.004-25.669 0.004-25.669-0-0.466-0-0.469 0.518-0.467l5.339 0c0.518-0.002 0.518 0 0.519 0.463 0 0-0.001 24.238-0.001 25.669-0.004 0.61-0.004 0.61-0.357 1.271l-2.322 4.223c-0.204 0.341-0.204 0.341-0.416 0.35h-0.199c-0.209-0.009-0.209-0.009-0.416-0.349l-2.307-4.225c-0.358-0.66-0.363-0.659-0.362-1.267z\"></path>\n      <path d=\"M6.996 15.434c0.011-1.435 0.004-14.946 0.004-14.946-0-0.466-0-0.466 0.518-0.465l5.339 0c0.518-0.002 0.518-0.002 0.519 0.46 0 0-0.001 13.515-0.001 14.946-0.004 0.61-0.004 0.61-0.357 1.271l-2.322 4.223c-0.204 0.341-0.204 0.341-0.416 0.35h-0.199c-0.209-0.009-0.209-0.009-0.416-0.349l-2.307-4.225c-0.358-0.66-0.363-0.659-0.362-1.267z\"></path>\n      <path d=\"M26.873 4.791c0.011-1.435 0.004-4.303 0.004-4.303-0-0.466-0-0.466 0.518-0.465l5.339 0c0.518-0.002 0.518-0.002 0.519 0.46 0 0-0.001 2.872-0.001 4.303-0.004 0.61-0.004 0.61-0.357 1.271l-2.322 4.223c-0.204 0.341-0.204 0.341-0.416 0.35h-0.199c-0.209-0.009-0.209-0.009-0.416-0.349l-2.307-4.225c-0.358-0.66-0.363-0.659-0.362-1.267z\"></path>\n      <path d=\"M0.372 4.791c0.011-1.435 0.004-4.303 0.004-4.303-0-0.466-0-0.466 0.518-0.465l5.339 0c0.518-0.002 0.518-0.002 0.519 0.46 0 0-0.001 2.872-0.001 4.303-0.004 0.61-0.004 0.61-0.357 1.271l-2.322 4.223c-0.204 0.341-0.204 0.341-0.416 0.35h-0.199c-0.209-0.009-0.209-0.009-0.416-0.349l-2.307-4.225c-0.358-0.66-0.363-0.659-0.362-1.267z\"></path>\n    </Svg>\n  );\n};\n\nIconVnator.defaultProps = {\n  viewBox: {\n    minX: 0,\n    minY: 0,\n    width: 34,\n    height: 32,\n  },\n  size: {\n    height: undefined,\n    width: undefined,\n  },\n  className: '',\n};\n\nIconVnator.propTypes = {\n  size: Type.shape({\n    height: Type.number,\n    width: Type.number,\n  }),\n  viewBox: viewBoxType,\n  className: Type.string,\n};\n\nexport { IconVnator };\n","import React from 'react';\nimport Type from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Svg, viewBoxType } from './Svg';\n\nconst IconDevTo = props => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Svg {...props}>\n      <title>{formatMessage({ id: 'icon.medium' })}</title>\n      <path d=\"M 8.542969 10.625 C 8.300781 10.449219 8.058594 10.363281 7.816406 10.363281 L 6.734375 10.363281 L 6.734375 16.660156 L 7.816406 16.660156 C 8.058594 16.660156 8.300781 16.570312 8.542969 16.394531 C 8.785156 16.222656 8.902344 15.960938 8.902344 15.609375 L 8.902344 11.410156 C 8.902344 11.0625 8.78125 10.800781 8.542969 10.625 Z M 26.195312 0 L 3.804688 0 C 2.296875 0 1.078125 1.179688 1.074219 2.640625 L 1.074219 24.359375 C 1.078125 25.820312 2.296875 27 3.804688 27 L 26.195312 27 C 27.703125 27 28.921875 25.820312 28.925781 24.359375 L 28.925781 2.640625 C 28.921875 1.179688 27.703125 0 26.195312 0 Z M 10.660156 15.621094 C 10.660156 16.753906 9.9375 18.472656 7.652344 18.46875 L 4.769531 18.46875 L 4.769531 8.496094 L 7.714844 8.496094 C 9.917969 8.496094 10.660156 10.210938 10.660156 11.347656 Z M 16.917969 10.277344 L 13.605469 10.277344 L 13.605469 12.59375 L 15.632812 12.59375 L 15.632812 14.375 L 13.605469 14.375 L 13.605469 16.691406 L 16.921875 16.691406 L 16.921875 18.472656 L 13.054688 18.472656 C 12.359375 18.488281 11.785156 17.957031 11.765625 17.285156 L 11.765625 9.746094 C 11.75 9.074219 12.296875 8.515625 12.992188 8.5 L 16.921875 8.5 Z M 23.363281 17.226562 C 22.542969 19.078125 21.070312 18.710938 20.414062 17.226562 L 18.019531 8.5 L 20.042969 8.5 L 21.890625 15.351562 L 23.730469 8.5 L 25.753906 8.5 Z M 23.363281 17.226562\"></path>\n    </Svg>\n  );\n};\n\nIconDevTo.defaultProps = {\n  viewBox: {\n    minX: 0,\n    minY: -2,\n    width: 32,\n    height: 32,\n  },\n  size: {\n    height: undefined,\n    width: undefined,\n  },\n  className: '',\n};\n\nIconDevTo.propTypes = {\n  size: Type.shape({\n    height: Type.number,\n    width: Type.number,\n  }),\n  viewBox: viewBoxType,\n  className: Type.string,\n};\n\nexport { IconDevTo };\n","import React from 'react';\nimport Type from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Svg, viewBoxType } from './Svg';\n\nconst IconLinkedin = props => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Svg {...props}>\n      <title>{formatMessage({ id: 'icon.linkedin' })}</title>\n      <path d=\"M29 0h-26c-1.65 0-3 1.35-3 3v26c0 1.65 1.35 3 3 3h26c1.65 0 3-1.35 3-3v-26c0-1.65-1.35-3-3-3zM12 26h-4v-14h4v14zM10 10c-1.106 0-2-0.894-2-2s0.894-2 2-2c1.106 0 2 0.894 2 2s-0.894 2-2 2zM26 26h-4v-8c0-1.106-0.894-2-2-2s-2 0.894-2 2v8h-4v-14h4v2.481c0.825-1.131 2.087-2.481 3.5-2.481 2.488 0 4.5 2.238 4.5 5v9z\"></path>\n    </Svg>\n  );\n};\n\nIconLinkedin.defaultProps = {\n  viewBox: {\n    minX: 0,\n    minY: 0,\n    width: 32,\n    height: 32,\n  },\n  size: {\n    height: undefined,\n    width: undefined,\n  },\n  className: '',\n};\n\nIconLinkedin.propTypes = {\n  size: Type.shape({\n    height: Type.number,\n    width: Type.number,\n  }),\n  viewBox: viewBoxType,\n  className: Type.string,\n};\n\nexport { IconLinkedin };\n","import React from 'react';\nimport Type from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Svg, viewBoxType } from './Svg';\n\nconst IconGithub = props => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Svg {...props}>\n      <title>{formatMessage({ id: 'icon.github' })}</title>\n      <path d=\"M16 0.396c-8.84 0-16 7.164-16 16 0 7.071 4.584 13.067 10.94 15.18 0.8 0.151 1.093-0.344 1.093-0.769 0-0.38-0.013-1.387-0.020-2.72-4.451 0.965-5.389-2.147-5.389-2.147-0.728-1.847-1.78-2.34-1.78-2.34-1.449-0.992 0.112-0.972 0.112-0.972 1.607 0.112 2.451 1.648 2.451 1.648 1.427 2.447 3.745 1.74 4.66 1.331 0.144-1.035 0.556-1.74 1.013-2.14-3.553-0.4-7.288-1.776-7.288-7.907 0-1.747 0.62-3.173 1.647-4.293-0.18-0.404-0.72-2.031 0.14-4.235 0 0 1.34-0.429 4.4 1.64 1.28-0.356 2.64-0.532 4-0.54 1.36 0.008 2.72 0.184 4 0.54 3.040-2.069 4.38-1.64 4.38-1.64 0.86 2.204 0.32 3.831 0.16 4.235 1.020 1.12 1.64 2.547 1.64 4.293 0 6.147-3.74 7.5-7.3 7.893 0.56 0.48 1.080 1.461 1.080 2.96 0 2.141-0.020 3.861-0.020 4.381 0 0.42 0.28 0.92 1.1 0.76 6.401-2.099 10.981-8.099 10.981-15.159 0-8.836-7.164-16-16-16z\"></path>\n    </Svg>\n  );\n};\n\nIconGithub.defaultProps = {\n  viewBox: {\n    minX: 0,\n    minY: 0,\n    width: 32,\n    height: 32,\n  },\n  size: {\n    height: undefined,\n    width: undefined,\n  },\n  className: '',\n};\n\nIconGithub.propTypes = {\n  size: Type.shape({\n    height: Type.number,\n    width: Type.number,\n  }),\n  viewBox: viewBoxType,\n  className: Type.string,\n};\n\nexport { IconGithub };\n","import React from 'react';\nimport Type from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Svg, viewBoxType } from './Svg';\n\nconst IconEmail = props => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Svg {...props}>\n      <title>{formatMessage({ id: 'icon.email' })}</title>\n      <path d=\"M4 10.561l11.236 7.865c0.453 0.313 1.060 0.328 1.529 0l11.235-7.865v13.439c0 0.363-0.147 0.695-0.393 0.94s-0.577 0.393-0.94 0.393h-21.333c-0.363 0-0.695-0.147-0.94-0.393s-0.393-0.577-0.393-0.94zM1.333 8.016v15.984c0 1.104 0.453 2.105 1.173 2.827s1.723 1.173 2.827 1.173h21.333c1.104 0 2.105-0.453 2.827-1.173s1.173-1.723 1.173-2.827v-15.984c0-0.013 0-0.027 0-0.040-0.007-1.095-0.457-2.087-1.173-2.803-0.721-0.72-1.723-1.173-2.827-1.173h-21.333c-1.104 0-2.105 0.453-2.827 1.173-0.716 0.716-1.167 1.708-1.173 2.804 0 0.007 0 0.015 0 0.023zM27.859 7.405l-11.859 8.3-11.859-8.3c0.064-0.128 0.149-0.244 0.251-0.345 0.247-0.247 0.579-0.393 0.941-0.393h21.333c0.363 0 0.695 0.147 0.94 0.393 0.101 0.101 0.187 0.219 0.251 0.345z\"></path>\n    </Svg>\n  );\n};\n\nIconEmail.defaultProps = {\n  viewBox: {\n    minX: 0,\n    minY: 0,\n    width: 32,\n    height: 32,\n  },\n  size: {\n    height: undefined,\n    width: undefined,\n  },\n  className: '',\n};\n\nIconEmail.propTypes = {\n  size: Type.shape({\n    height: Type.number,\n    width: Type.number,\n  }),\n  viewBox: viewBoxType,\n  className: Type.string,\n};\n\nexport { IconEmail };\n","import React from 'react';\nimport Type from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Svg, viewBoxType } from './Svg';\n\nconst IconHaskell = props => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Svg {...props}>\n      <title>{formatMessage({ id: 'icon.haskell' })}</title>\n      <path\n        fill=\"#5d4f85\"\n        d=\"M0.008 27.293l7.524-11.293-7.524-11.292h5.647l7.565 11.293-7.565 11.291zM7.532 27.293l7.521-11.293-7.52-11.292h5.688l15.004 22.584h-5.632l-4.713-7.12-4.66 7.12zM25.733 20.7l-2.503-3.769h8.761v3.768zM21.965 15.053l-2.503-3.769h12.516v3.769z\"></path>\n    </Svg>\n  );\n};\n\nIconHaskell.defaultProps = {\n  viewBox: {\n    minX: 0,\n    minY: 0,\n    width: 32,\n    height: 32,\n  },\n  size: {\n    height: undefined,\n    width: undefined,\n  },\n  className: '',\n};\n\nIconHaskell.propTypes = {\n  size: Type.shape({\n    height: Type.number,\n    width: Type.number,\n  }),\n  viewBox: viewBoxType,\n  className: Type.string,\n};\n\nexport { IconHaskell };\n","import React from 'react';\nimport Type from 'prop-types';\nimport style from './App.module.css';\n\nimport { Header } from '../components/Header/Header';\nimport { Stack } from '../components/Stack/Stack';\nimport { Jobs } from '../components/Jobs/Jobs';\nimport { LINKS } from '../constants/links';\nimport { ME } from '../constants/me';\nimport {\n  IconGithub,\n  IconLinkedin,\n  IconDevTo,\n  IconEmail,\n} from '../components/Icon';\n\nconst List = ({ position }) => (\n  <ul className={`${style.list} ${position}`}>\n    <li className={style.item}>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={LINKS[ME.SELF][ME.EMAIL]}>\n        <IconEmail className={style.icon} />\n      </a>\n    </li>\n    <li className={style.item}>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={LINKS[ME.SELF][ME.GIT_HUB]}>\n        <IconGithub className={style.icon} />\n      </a>\n    </li>\n    <li className={style.item}>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={LINKS[ME.SELF][ME.LINKEDIN]}>\n        <IconLinkedin className={style.icon} />\n      </a>\n    </li>\n    <li className={style.item}>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={LINKS[ME.SELF][ME.DEV_TO]}>\n        <IconDevTo className={style.icon} />\n      </a>\n    </li>\n  </ul>\n);\n\nList.propTypes = {\n  position: Type.string.isRequired,\n};\n\nconst App = () => {\n  return (\n    <div className={style.App}>\n      <List position={style._top} />\n      <Header />\n      <Stack />\n      <Jobs />\n      <List position={style._bottom} />\n    </div>\n  );\n};\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/dist/locale-data/pt';\nimport '@formatjs/intl-relativetimeformat/dist/locale-data/en';\n\nimport { messages } from './config/messages';\nimport { flattenMessages } from './config/flattenMessages';\nimport * as serviceWorker from './config/serviceWorker';\n\nimport { App } from './App/App';\n\nimport './index.css';\n\nconst locale =\n  navigator.language ||\n  navigator.userLanguage ||\n  (navigator.languages && navigator.languages[0]) ||\n  'pt-BR';\n\nReactDOM.render(\n  <IntlProvider locale={locale} messages={flattenMessages(messages[locale])}>\n    <App />\n  </IntlProvider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","function flattenMessages(nestedMessages, prefix = '') {\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      return {\n        ...messages,\n        [prefixedKey]: value,\n      };\n    }\n\n    return Object.assign(messages, flattenMessages(value, prefixedKey));\n  }, {});\n}\n\nexport { flattenMessages };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2htTF\",\"logo\":\"App_logo__2Ef07\",\"list\":\"App_list__2UqfW\",\"_top\":\"App__top__12aol\",\"_bottom\":\"App__bottom__1jErR\",\"item\":\"App_item__2SgCZ\",\"icon\":\"App_icon__2LV91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stack\":\"Stack_Stack__eKysO\",\"skills\":\"Stack_skills__3Epig\",\"skill\":\"Stack_skill__3PD5p\",\"function\":\"Stack_function__39HEJ\",\"return\":\"Stack_return__1PN_-\",\"list\":\"Stack_list__2f9ap\",\"tech\":\"Stack_tech__203Jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Jobs\":\"Jobs_Jobs__1i2oY\",\"list\":\"Jobs_list__82M_4\",\"item\":\"Jobs_item__1T85m\",\"employ\":\"Jobs_employ__2bEd5\"};"],"sourceRoot":""}